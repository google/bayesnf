[project]
# Project metadata. Available keys are documented at:
# https://packaging.python.org/en/latest/specifications/declaring-project-metadata
name = "bayesnf"
description = "Scalable spatiotemporal prediction with Bayesian neural fields"
readme = "README.md"
requires-python = ">=3.9"
license = {file = "LICENSE"}
authors = [{name = "bayesnf authors", email="bayesnf@google.com"}]
classifiers = [  # List of https://pypi.org/classifiers/
    "License :: OSI Approved :: Apache Software License",
    "Intended Audience :: Science/Research",
]
keywords = []

# pip dependencies of the project
# Installed locally with `pip install -e .`
dependencies = [
    "flax",
    "jax>=0.4.6",
    "jaxtyping",
    "numpy",
    "optax",
    "pandas",
    "tensorflow-probability[jax]>=0.19.0",
]

# `version` is automatically set by flit to use `bayesnf.__version__`
dynamic = ["version"]

[project.urls]
homepage = "https://github.com/google/bayesnf"
repository = "https://github.com/google/bayesnf"
changelog = "https://github.com/google/bayesnf/blob/main/CHANGELOG.md"
# documentation = ""

[project.optional-dependencies]
# Development deps (unittest, linting, formating,...)
# Installed through `pip install -e .[dev]`
dev = [
    "pytest",
    "pytest-xdist",
    "pylint>=2.6.0",
    "pyink",
]

docs = [
    # Latest versions at time of writing.
    "mkdocs==1.3.0",            # Main documentation generator.
    "mkdocs-material==7.3.6",   # Theme
    "pymdown-extensions==9.4",  # Markdown extensions e.g. to handle LaTeX.
    "mkdocstrings==0.17.0",     # Autogenerate documentation from docstrings.
    "mknotebooks==0.7.1",       # Turn Jupyter Lab notebooks into webpages.
    "pytkdocs_tweaks==0.0.8",   # Tweaks mkdocstrings to improve various aspects
    "jinja2==3.0.3",            # Older version. After 3.1.0 seems to be incompatible with current versions of mkdocstrings.
    "nbconvert==6.5.0",        # | Older verson to avoid error
    "nbformat==5.4.0",          # |
    "pygments==2.14.0"
]

[tool.pyink]
# Formatting configuration to follow Google style-guide
line-length = 80
preview = true
pyink-indentation = 2
pyink-use-majority-quotes = true

[build-system]
# Build system specify which backend is used to build/install the project (flit,
# poetry, setuptools,...). All backends are supported by `pip install`
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
# Flit specific options (files to exclude from the PyPI package).
# If using another build backend (setuptools, poetry), you can remove this
# section.
exclude = [
  # Do not release tests files on PyPI
  "**/*_test.py",
]
